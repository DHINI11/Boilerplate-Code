//--------------------------------------------------------------------------------------------------------    Simple Cell tag insert

// Assuming you have a reference to your SpreadJS instance, for example:
var spread = new GC.Spread.Sheets.Workbook(document.getElementById('yourSpreadContainer'));

// Get the active sheet
var activeSheet = spread.getActiveSheet();

// Specify the row and column index where you want to add the cell tag
var rowIndex = 0;
var colIndex = 0;

// Get the cell at the specified position
var cell = activeSheet.getCell(rowIndex, colIndex);

// Add a tag to the cell
cell.tag('YourCellTag');

// To retrieve the tag later, you can use:
var retrievedTag = cell.tag();


//---------------------------------------------------------------------------------------------------------- Add Cell Tag while copy
// Assuming you have a reference to your SpreadJS instance
var spread = new GC.Spread.Sheets.Workbook(document.getElementById('yourSpreadContainer'));

// Subscribe to the 'copied' event
spread.bind(GC.Spread.Sheets.Events.Copied, function (sender, args) {
    // Iterate through the copied range
    for (var r = args.range.row; r < args.range.row + args.range.rowCount; r++) {
        for (var c = args.range.col; c < args.range.col + args.range.colCount; c++) {
            // Get the cell at the current position
            var cell = spread.getActiveSheet().getCell(r, c);

            // Add a tag to the cell
            cell.tag('YourCellTag');
        }
    }
});

// ... rest of your SpreadJS initialization code ...

//-----------------------------------------------------------------------------------------------------------  Saving sheet data in server side

// Assuming you have a reference to your SpreadJS instance
var spread = new GC.Spread.Sheets.Workbook(document.getElementById('yourSpreadContainer'));

// Get JSON data of the workbook
var workbookData = spread.toJSON();

// Send data to the server using AJAX
$.ajax({
    type: 'POST',
    url: 'your_server_script.php', // Replace with your server-side script
    data: { workbookData: JSON.stringify(workbookData) },
    success: function(response) {
        console.log('Workbook saved successfully:', response);
    },
    error: function(error) {
        console.error('Error saving workbook:', error);
    }
});

//----------------------------------------------------------------------------------------------------------- ckeditor set attribute 

// Assuming you have a reference to your SpreadJS instance
var spread = new GC.Spread.Sheets.Workbook(document.getElementById('yourSpreadContainer'));

// Assuming you have CKEditor integrated and initialized
// Replace 'yourCKEditorInstance' with the actual CKEditor instance
var ckeditor = CKEDITOR.instances['yourCKEditorInstance'];

// Subscribe to the 'pasting' event
spread.bind(GC.Spread.Sheets.Events.Pasting, function (sender, args) {
    // Get the copied range
    var copiedRange = args.range;

    // Create an array to store cell tag values
    var cellTagValues = [];

    // Iterate through the copied range
    for (var r = copiedRange.row; r < copiedRange.row + copiedRange.rowCount; r++) {
        for (var c = copiedRange.col; c < copiedRange.col + copiedRange.colCount; c++) {
            // Get the cell at the current position
            var cell = spread.getActiveSheet().getCell(r, c);

            // Get the tag value and add it to the array
            var cellTag = cell.tag();
            cellTagValues.push(cellTag);
        }
    }

    // Set the "Cell ID" attribute in CKEditor
    var cellIDValue = cellTagValues.join(',');
    ckeditor.setData('<div CellID="' + cellIDValue + '">Pasted content goes here</div>');
});

// ... rest of your SpreadJS initialization code ...

