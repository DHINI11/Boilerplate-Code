using HtmlAgilityPack;

class Program
{
    static void Main(string[] args)
    {
        string htmlString = "<p>This is an example <strong>HTML</strong> string</p>";

        HtmlDocument doc = new HtmlDocument();
        doc.LoadHtml(htmlString);

        // Print the parsed HTML with original text case
        string parsedHtml = doc.DocumentNode.OuterHtml;
        Console.WriteLine(parsedHtml);
    }
}



using AngleSharp;
using AngleSharp.Dom;

class Program
{
    static void Main(string[] args)
    {
        string htmlString = "<p>This is an example <strong>HTML</strong> string</p>";

        var config = Configuration.Default;
        var context = BrowsingContext.New(config);
        var document = context.OpenAsync(req => req.Content(htmlString)).Result;

        // Print the parsed HTML with original text case
        string parsedHtml = document.DocumentElement.OuterHtml;
        Console.WriteLine(parsedHtml);
    }
}






/// disable table row


<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Table Row Disable</title>
</head>
<body>

<table id="myTable">
  <tr>
    <td>Value 1</td>
  </tr>
  <tr>
    <td>Value 2</td>
  </tr>
  <tr>
    <td>Value 3</td>
  </tr>
</table>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const table = document.getElementById('myTable');
  const searchValue = 'Value 2'; // Value to search for

  // Iterate over the rows of the table
  Array.from(table.rows).forEach(row => {
    // Use Array.find() to search for the value within each row
    const cellWithValue = Array.from(row.cells).find(cell => cell.textContent === searchValue);
    
    // If the value is found, disable the row
    if (cellWithValue) {
      row.style.pointerEvents = 'none'; // Disable pointer events
      row.style.opacity = 0.5; // Optionally, change the opacity to indicate it's disabled
    }
  });
});
</script>

</body>
</html>